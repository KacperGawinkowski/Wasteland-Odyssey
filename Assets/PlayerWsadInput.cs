//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerWsadInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerWsadInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerWsadInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerWsadInput"",
    ""maps"": [
        {
            ""name"": ""PlayerLocal"",
            ""id"": ""d43ca73c-01a8-4301-bac5-7668c15d1f4c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6630a56a-f7a3-4449-a1aa-382956b8da50"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""fa750a6a-adef-4567-ab5b-b6143d5f53b7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""9424a5cb-f36b-4d7a-9be9-2de5512f4ded"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""29f042eb-aa3a-40e0-a8e1-46e6c61752da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""71ee4a79-cf0a-411b-8f2d-a76574700edc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectPrimaryWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""b0b351e9-ed20-49a1-bb84-d6717cadad62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSecondaryWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""422ff07f-eb21-44ce-b534-37aa90aa8441"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GigaLag"",
                    ""type"": ""Button"",
                    ""id"": ""600d118f-e28d-4cce-8634-82c5eac50944"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""409b57c5-1057-4c2f-b811-71383bc45498"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillE"",
                    ""type"": ""Button"",
                    ""id"": ""bd71a3e1-1da2-4539-920d-0db00abe1650"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillQ"",
                    ""type"": ""Button"",
                    ""id"": ""cac84de5-f112-4d47-bfaa-dd20d0af48d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaceSkill"",
                    ""type"": ""Button"",
                    ""id"": ""e348ba73-53fc-42d7-9a43-022ee5acf63e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelSkill"",
                    ""type"": ""Button"",
                    ""id"": ""02d6ba5d-d7f0-42ae-b54d-abbbe9a0b399"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6af1e1ae-918d-48f4-b52d-c34f03829a40"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""38377465-31a8-4086-9748-bb14fec9d025"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""04e9d844-1b8e-49d0-ab9e-132048539301"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fad9f420-fdcd-4de0-a2d9-da306c2d0944"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""350a3f37-a283-4a75-987b-709dedd82be7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""514df380-85ad-462b-a60a-936257405736"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa956463-834c-484b-a9c4-f78d42aa7073"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6db543f-4e60-4022-a134-4c221a6bd5cc"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectPrimaryWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0d9c343-7e43-4b30-867e-52679cf5ab7c"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectSecondaryWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43295835-71c4-4dc8-8608-8ba701276d6c"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GigaLag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e798ecb-cc6f-40ae-b9de-fdbd68685f21"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9c8e78c-3432-489f-9b10-482644bd6237"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SkillE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d03ab64-5991-45f4-a35a-42765206c01f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SkillQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c06d57b-f0cd-45e4-b620-c0019a344b76"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HideWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2aaef78-d1de-4aa4-a729-c11d3d998e50"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlaceSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39912430-a776-4a63-b45a-e541c5178cd0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CancelSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""cdf96c23-2d90-4d9e-a44c-0fd8bce49ed5"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""a5a26a7b-dd5d-4a98-97d6-7002abaf50d0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Binding"",
                    ""id"": ""37eaba2a-0427-4243-92ce-a003b284cc09"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PlayerGlobal"",
            ""id"": ""feb4fcd3-72c5-4a3f-bce7-29b703e3a3b8"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""3a1a3617-7e64-4204-afb5-394f2108ba1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ClickOnTile"",
                    ""type"": ""Button"",
                    ""id"": ""d110cfc3-36ba-4e65-8bb8-cac39c6f34fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""4bad61c0-58d1-4dd7-ba0d-c9f14a8583f7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveMap"",
                    ""type"": ""Value"",
                    ""id"": ""f16c8a22-b8d2-43be-8dc8-128eb8f3eb52"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CenterOnPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""034a1188-171b-46b5-883a-79f55dd05168"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d227d157-2520-406f-b120-a56f9fc53f4c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83014c86-4e48-42b1-a286-4735856fe05b"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86e632ca-6acf-476a-9b7a-04d3cd5c2268"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CenterOnPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""7a22ef4a-e61f-4227-9bdb-d10a48b114db"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""afa8880e-975e-4074-9e5e-551ee69ca5fa"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0be7c4c7-fd73-4c21-b3c8-46499e5c9cf9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0ab29732-5956-4b34-9ca2-4304a315380e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2dbb36cb-b2d3-4bc1-a65e-32628c6041f7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""1697b7fa-d0a7-4cbd-bd73-2eeb35437790"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9367aaa8-1111-413c-85ab-e2272f62b4c6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d58dba32-a0fe-404e-b767-a1e80d94b7d4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""85944d19-5290-46ac-ab4c-ad38fc426cbd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3e991972-f84a-43f4-80ba-374af6ee3689"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""MiddleMouseButton"",
                    ""id"": ""ccc70fb6-5f03-44a3-a1be-37b2a70a085f"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""188e6093-f695-4df7-8564-8029758fccc8"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""c561f911-29bc-40e9-a72b-8f1c8024ebb2"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2"",
                    ""groups"": """",
                    ""action"": ""MoveMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""11b43bb0-eb55-49eb-ada8-851c4756c4b0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickOnTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Canvas"",
            ""id"": ""7c089549-51ad-4722-9b8c-0d5596b6c2c9"",
            ""actions"": [
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""df21d93e-6fa9-467d-ab6a-1c74f10da03a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowQuestInterface"",
                    ""type"": ""Button"",
                    ""id"": ""7998d61b-9118-41a9-b2b0-70253ec50597"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowHealthInterface"",
                    ""type"": ""Button"",
                    ""id"": ""93b1ffad-5a87-4d3a-b3a2-4ba77f0dffc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowInventory"",
                    ""type"": ""Button"",
                    ""id"": ""4d688ac6-d87f-42d4-b05e-6bcff1b201f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a1b7c513-b038-4bd3-91d9-6f5f8b8157f1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef7c3230-f309-462d-b2bc-be67a2e43a3c"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ShowInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bca2151e-476c-4b9b-8106-92180391a7b1"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowHealthInterface"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43a4a840-7c55-486c-b5f0-32a6f69b336b"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ShowQuestInterface"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerLocal
        m_PlayerLocal = asset.FindActionMap("PlayerLocal", throwIfNotFound: true);
        m_PlayerLocal_Move = m_PlayerLocal.FindAction("Move", throwIfNotFound: true);
        m_PlayerLocal_RotateCamera = m_PlayerLocal.FindAction("RotateCamera", throwIfNotFound: true);
        m_PlayerLocal_Shoot = m_PlayerLocal.FindAction("Shoot", throwIfNotFound: true);
        m_PlayerLocal_Reload = m_PlayerLocal.FindAction("Reload", throwIfNotFound: true);
        m_PlayerLocal_HideWeapon = m_PlayerLocal.FindAction("HideWeapon", throwIfNotFound: true);
        m_PlayerLocal_SelectPrimaryWeapon = m_PlayerLocal.FindAction("SelectPrimaryWeapon", throwIfNotFound: true);
        m_PlayerLocal_SelectSecondaryWeapon = m_PlayerLocal.FindAction("SelectSecondaryWeapon", throwIfNotFound: true);
        m_PlayerLocal_GigaLag = m_PlayerLocal.FindAction("GigaLag", throwIfNotFound: true);
        m_PlayerLocal_Interact = m_PlayerLocal.FindAction("Interact", throwIfNotFound: true);
        m_PlayerLocal_SkillE = m_PlayerLocal.FindAction("SkillE", throwIfNotFound: true);
        m_PlayerLocal_SkillQ = m_PlayerLocal.FindAction("SkillQ", throwIfNotFound: true);
        m_PlayerLocal_PlaceSkill = m_PlayerLocal.FindAction("PlaceSkill", throwIfNotFound: true);
        m_PlayerLocal_CancelSkill = m_PlayerLocal.FindAction("CancelSkill", throwIfNotFound: true);
        // PlayerGlobal
        m_PlayerGlobal = asset.FindActionMap("PlayerGlobal", throwIfNotFound: true);
        m_PlayerGlobal_Move = m_PlayerGlobal.FindAction("Move", throwIfNotFound: true);
        m_PlayerGlobal_ClickOnTile = m_PlayerGlobal.FindAction("ClickOnTile", throwIfNotFound: true);
        m_PlayerGlobal_Scroll = m_PlayerGlobal.FindAction("Scroll", throwIfNotFound: true);
        m_PlayerGlobal_MoveMap = m_PlayerGlobal.FindAction("MoveMap", throwIfNotFound: true);
        m_PlayerGlobal_CenterOnPlayer = m_PlayerGlobal.FindAction("CenterOnPlayer", throwIfNotFound: true);
        // Canvas
        m_Canvas = asset.FindActionMap("Canvas", throwIfNotFound: true);
        m_Canvas_OpenMenu = m_Canvas.FindAction("OpenMenu", throwIfNotFound: true);
        m_Canvas_ShowQuestInterface = m_Canvas.FindAction("ShowQuestInterface", throwIfNotFound: true);
        m_Canvas_ShowHealthInterface = m_Canvas.FindAction("ShowHealthInterface", throwIfNotFound: true);
        m_Canvas_ShowInventory = m_Canvas.FindAction("ShowInventory", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerLocal
    private readonly InputActionMap m_PlayerLocal;
    private List<IPlayerLocalActions> m_PlayerLocalActionsCallbackInterfaces = new List<IPlayerLocalActions>();
    private readonly InputAction m_PlayerLocal_Move;
    private readonly InputAction m_PlayerLocal_RotateCamera;
    private readonly InputAction m_PlayerLocal_Shoot;
    private readonly InputAction m_PlayerLocal_Reload;
    private readonly InputAction m_PlayerLocal_HideWeapon;
    private readonly InputAction m_PlayerLocal_SelectPrimaryWeapon;
    private readonly InputAction m_PlayerLocal_SelectSecondaryWeapon;
    private readonly InputAction m_PlayerLocal_GigaLag;
    private readonly InputAction m_PlayerLocal_Interact;
    private readonly InputAction m_PlayerLocal_SkillE;
    private readonly InputAction m_PlayerLocal_SkillQ;
    private readonly InputAction m_PlayerLocal_PlaceSkill;
    private readonly InputAction m_PlayerLocal_CancelSkill;
    public struct PlayerLocalActions
    {
        private @PlayerWsadInput m_Wrapper;
        public PlayerLocalActions(@PlayerWsadInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerLocal_Move;
        public InputAction @RotateCamera => m_Wrapper.m_PlayerLocal_RotateCamera;
        public InputAction @Shoot => m_Wrapper.m_PlayerLocal_Shoot;
        public InputAction @Reload => m_Wrapper.m_PlayerLocal_Reload;
        public InputAction @HideWeapon => m_Wrapper.m_PlayerLocal_HideWeapon;
        public InputAction @SelectPrimaryWeapon => m_Wrapper.m_PlayerLocal_SelectPrimaryWeapon;
        public InputAction @SelectSecondaryWeapon => m_Wrapper.m_PlayerLocal_SelectSecondaryWeapon;
        public InputAction @GigaLag => m_Wrapper.m_PlayerLocal_GigaLag;
        public InputAction @Interact => m_Wrapper.m_PlayerLocal_Interact;
        public InputAction @SkillE => m_Wrapper.m_PlayerLocal_SkillE;
        public InputAction @SkillQ => m_Wrapper.m_PlayerLocal_SkillQ;
        public InputAction @PlaceSkill => m_Wrapper.m_PlayerLocal_PlaceSkill;
        public InputAction @CancelSkill => m_Wrapper.m_PlayerLocal_CancelSkill;
        public InputActionMap Get() { return m_Wrapper.m_PlayerLocal; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerLocalActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerLocalActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerLocalActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerLocalActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @RotateCamera.started += instance.OnRotateCamera;
            @RotateCamera.performed += instance.OnRotateCamera;
            @RotateCamera.canceled += instance.OnRotateCamera;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @HideWeapon.started += instance.OnHideWeapon;
            @HideWeapon.performed += instance.OnHideWeapon;
            @HideWeapon.canceled += instance.OnHideWeapon;
            @SelectPrimaryWeapon.started += instance.OnSelectPrimaryWeapon;
            @SelectPrimaryWeapon.performed += instance.OnSelectPrimaryWeapon;
            @SelectPrimaryWeapon.canceled += instance.OnSelectPrimaryWeapon;
            @SelectSecondaryWeapon.started += instance.OnSelectSecondaryWeapon;
            @SelectSecondaryWeapon.performed += instance.OnSelectSecondaryWeapon;
            @SelectSecondaryWeapon.canceled += instance.OnSelectSecondaryWeapon;
            @GigaLag.started += instance.OnGigaLag;
            @GigaLag.performed += instance.OnGigaLag;
            @GigaLag.canceled += instance.OnGigaLag;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @SkillE.started += instance.OnSkillE;
            @SkillE.performed += instance.OnSkillE;
            @SkillE.canceled += instance.OnSkillE;
            @SkillQ.started += instance.OnSkillQ;
            @SkillQ.performed += instance.OnSkillQ;
            @SkillQ.canceled += instance.OnSkillQ;
            @PlaceSkill.started += instance.OnPlaceSkill;
            @PlaceSkill.performed += instance.OnPlaceSkill;
            @PlaceSkill.canceled += instance.OnPlaceSkill;
            @CancelSkill.started += instance.OnCancelSkill;
            @CancelSkill.performed += instance.OnCancelSkill;
            @CancelSkill.canceled += instance.OnCancelSkill;
        }

        private void UnregisterCallbacks(IPlayerLocalActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @RotateCamera.started -= instance.OnRotateCamera;
            @RotateCamera.performed -= instance.OnRotateCamera;
            @RotateCamera.canceled -= instance.OnRotateCamera;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @HideWeapon.started -= instance.OnHideWeapon;
            @HideWeapon.performed -= instance.OnHideWeapon;
            @HideWeapon.canceled -= instance.OnHideWeapon;
            @SelectPrimaryWeapon.started -= instance.OnSelectPrimaryWeapon;
            @SelectPrimaryWeapon.performed -= instance.OnSelectPrimaryWeapon;
            @SelectPrimaryWeapon.canceled -= instance.OnSelectPrimaryWeapon;
            @SelectSecondaryWeapon.started -= instance.OnSelectSecondaryWeapon;
            @SelectSecondaryWeapon.performed -= instance.OnSelectSecondaryWeapon;
            @SelectSecondaryWeapon.canceled -= instance.OnSelectSecondaryWeapon;
            @GigaLag.started -= instance.OnGigaLag;
            @GigaLag.performed -= instance.OnGigaLag;
            @GigaLag.canceled -= instance.OnGigaLag;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @SkillE.started -= instance.OnSkillE;
            @SkillE.performed -= instance.OnSkillE;
            @SkillE.canceled -= instance.OnSkillE;
            @SkillQ.started -= instance.OnSkillQ;
            @SkillQ.performed -= instance.OnSkillQ;
            @SkillQ.canceled -= instance.OnSkillQ;
            @PlaceSkill.started -= instance.OnPlaceSkill;
            @PlaceSkill.performed -= instance.OnPlaceSkill;
            @PlaceSkill.canceled -= instance.OnPlaceSkill;
            @CancelSkill.started -= instance.OnCancelSkill;
            @CancelSkill.performed -= instance.OnCancelSkill;
            @CancelSkill.canceled -= instance.OnCancelSkill;
        }

        public void RemoveCallbacks(IPlayerLocalActions instance)
        {
            if (m_Wrapper.m_PlayerLocalActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerLocalActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerLocalActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerLocalActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerLocalActions @PlayerLocal => new PlayerLocalActions(this);

    // PlayerGlobal
    private readonly InputActionMap m_PlayerGlobal;
    private List<IPlayerGlobalActions> m_PlayerGlobalActionsCallbackInterfaces = new List<IPlayerGlobalActions>();
    private readonly InputAction m_PlayerGlobal_Move;
    private readonly InputAction m_PlayerGlobal_ClickOnTile;
    private readonly InputAction m_PlayerGlobal_Scroll;
    private readonly InputAction m_PlayerGlobal_MoveMap;
    private readonly InputAction m_PlayerGlobal_CenterOnPlayer;
    public struct PlayerGlobalActions
    {
        private @PlayerWsadInput m_Wrapper;
        public PlayerGlobalActions(@PlayerWsadInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerGlobal_Move;
        public InputAction @ClickOnTile => m_Wrapper.m_PlayerGlobal_ClickOnTile;
        public InputAction @Scroll => m_Wrapper.m_PlayerGlobal_Scroll;
        public InputAction @MoveMap => m_Wrapper.m_PlayerGlobal_MoveMap;
        public InputAction @CenterOnPlayer => m_Wrapper.m_PlayerGlobal_CenterOnPlayer;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGlobal; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGlobalActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerGlobalActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerGlobalActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerGlobalActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ClickOnTile.started += instance.OnClickOnTile;
            @ClickOnTile.performed += instance.OnClickOnTile;
            @ClickOnTile.canceled += instance.OnClickOnTile;
            @Scroll.started += instance.OnScroll;
            @Scroll.performed += instance.OnScroll;
            @Scroll.canceled += instance.OnScroll;
            @MoveMap.started += instance.OnMoveMap;
            @MoveMap.performed += instance.OnMoveMap;
            @MoveMap.canceled += instance.OnMoveMap;
            @CenterOnPlayer.started += instance.OnCenterOnPlayer;
            @CenterOnPlayer.performed += instance.OnCenterOnPlayer;
            @CenterOnPlayer.canceled += instance.OnCenterOnPlayer;
        }

        private void UnregisterCallbacks(IPlayerGlobalActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ClickOnTile.started -= instance.OnClickOnTile;
            @ClickOnTile.performed -= instance.OnClickOnTile;
            @ClickOnTile.canceled -= instance.OnClickOnTile;
            @Scroll.started -= instance.OnScroll;
            @Scroll.performed -= instance.OnScroll;
            @Scroll.canceled -= instance.OnScroll;
            @MoveMap.started -= instance.OnMoveMap;
            @MoveMap.performed -= instance.OnMoveMap;
            @MoveMap.canceled -= instance.OnMoveMap;
            @CenterOnPlayer.started -= instance.OnCenterOnPlayer;
            @CenterOnPlayer.performed -= instance.OnCenterOnPlayer;
            @CenterOnPlayer.canceled -= instance.OnCenterOnPlayer;
        }

        public void RemoveCallbacks(IPlayerGlobalActions instance)
        {
            if (m_Wrapper.m_PlayerGlobalActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerGlobalActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerGlobalActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerGlobalActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerGlobalActions @PlayerGlobal => new PlayerGlobalActions(this);

    // Canvas
    private readonly InputActionMap m_Canvas;
    private List<ICanvasActions> m_CanvasActionsCallbackInterfaces = new List<ICanvasActions>();
    private readonly InputAction m_Canvas_OpenMenu;
    private readonly InputAction m_Canvas_ShowQuestInterface;
    private readonly InputAction m_Canvas_ShowHealthInterface;
    private readonly InputAction m_Canvas_ShowInventory;
    public struct CanvasActions
    {
        private @PlayerWsadInput m_Wrapper;
        public CanvasActions(@PlayerWsadInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenMenu => m_Wrapper.m_Canvas_OpenMenu;
        public InputAction @ShowQuestInterface => m_Wrapper.m_Canvas_ShowQuestInterface;
        public InputAction @ShowHealthInterface => m_Wrapper.m_Canvas_ShowHealthInterface;
        public InputAction @ShowInventory => m_Wrapper.m_Canvas_ShowInventory;
        public InputActionMap Get() { return m_Wrapper.m_Canvas; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CanvasActions set) { return set.Get(); }
        public void AddCallbacks(ICanvasActions instance)
        {
            if (instance == null || m_Wrapper.m_CanvasActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CanvasActionsCallbackInterfaces.Add(instance);
            @OpenMenu.started += instance.OnOpenMenu;
            @OpenMenu.performed += instance.OnOpenMenu;
            @OpenMenu.canceled += instance.OnOpenMenu;
            @ShowQuestInterface.started += instance.OnShowQuestInterface;
            @ShowQuestInterface.performed += instance.OnShowQuestInterface;
            @ShowQuestInterface.canceled += instance.OnShowQuestInterface;
            @ShowHealthInterface.started += instance.OnShowHealthInterface;
            @ShowHealthInterface.performed += instance.OnShowHealthInterface;
            @ShowHealthInterface.canceled += instance.OnShowHealthInterface;
            @ShowInventory.started += instance.OnShowInventory;
            @ShowInventory.performed += instance.OnShowInventory;
            @ShowInventory.canceled += instance.OnShowInventory;
        }

        private void UnregisterCallbacks(ICanvasActions instance)
        {
            @OpenMenu.started -= instance.OnOpenMenu;
            @OpenMenu.performed -= instance.OnOpenMenu;
            @OpenMenu.canceled -= instance.OnOpenMenu;
            @ShowQuestInterface.started -= instance.OnShowQuestInterface;
            @ShowQuestInterface.performed -= instance.OnShowQuestInterface;
            @ShowQuestInterface.canceled -= instance.OnShowQuestInterface;
            @ShowHealthInterface.started -= instance.OnShowHealthInterface;
            @ShowHealthInterface.performed -= instance.OnShowHealthInterface;
            @ShowHealthInterface.canceled -= instance.OnShowHealthInterface;
            @ShowInventory.started -= instance.OnShowInventory;
            @ShowInventory.performed -= instance.OnShowInventory;
            @ShowInventory.canceled -= instance.OnShowInventory;
        }

        public void RemoveCallbacks(ICanvasActions instance)
        {
            if (m_Wrapper.m_CanvasActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICanvasActions instance)
        {
            foreach (var item in m_Wrapper.m_CanvasActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CanvasActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CanvasActions @Canvas => new CanvasActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IPlayerLocalActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnHideWeapon(InputAction.CallbackContext context);
        void OnSelectPrimaryWeapon(InputAction.CallbackContext context);
        void OnSelectSecondaryWeapon(InputAction.CallbackContext context);
        void OnGigaLag(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnSkillE(InputAction.CallbackContext context);
        void OnSkillQ(InputAction.CallbackContext context);
        void OnPlaceSkill(InputAction.CallbackContext context);
        void OnCancelSkill(InputAction.CallbackContext context);
    }
    public interface IPlayerGlobalActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnClickOnTile(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
        void OnMoveMap(InputAction.CallbackContext context);
        void OnCenterOnPlayer(InputAction.CallbackContext context);
    }
    public interface ICanvasActions
    {
        void OnOpenMenu(InputAction.CallbackContext context);
        void OnShowQuestInterface(InputAction.CallbackContext context);
        void OnShowHealthInterface(InputAction.CallbackContext context);
        void OnShowInventory(InputAction.CallbackContext context);
    }
}
